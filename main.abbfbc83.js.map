{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","reject","addEventListener","e","type","target","nodeName","id","printMessage","message","document","body","insertAdjacentHTML","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GAQjB,OAAA,IAAIC,QAPM,SAACC,EAASC,GACzBJ,EAAQK,iBAAiBJ,EAAW,SAACK,GACnCH,EAAQ,UAAUG,OAAAA,EAAEC,KACbD,qBAAAA,GAAAA,OAAAA,EAAEE,OAAOC,SAAiBH,UAAAA,OAAAA,EAAEE,OAAOE,GADnC,UAQb,IAAMC,EAAe,SAACC,GACpBC,SAASC,KAAKC,mBAAmB,YACVH,4BAAAA,OAAAA,EADvB,gBAKFI,OAAOC,QAAU,CACflB,QAAAA,EACAY,aAAAA","file":"main.abbfbc83.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  const resolver = (resolve, reject) => {\n    element.addEventListener(eventName, (e) => {\n      resolve(`It was ${e.type} on the element: `\n        + `${e.target.nodeName}, id: ${e.target.id}.`);\n    });\n  };\n\n  return new Promise(resolver);\n}\n\nconst printMessage = (message) => {\n  document.body.insertAdjacentHTML('beforeend', `\n  <div class='message'>${message}</div>\n  `);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}